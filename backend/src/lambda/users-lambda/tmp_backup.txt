/* eslint-disable @typescript-eslint/no-var-requires */
const {
  query,
  queryPool,
  Router,
  createConnection,
  createConnectionPool,
} = require('/opt/nodejs/node_modules/sql-layer');

const { asyncWrap } = require('/opt/nodejs/node_modules/asyncWrap-layer');
const {
  listUsers,
  addUser,
  updateUserInfoById,
  getUserInfoById,
  getAddresses,
  addAddress,
  getAddressesByUserId,
  deleteAddressById,
  updateAddressById,
  getSellerInfo,
  getBuyerInfo,
} = require('/opt/nodejs/node_modules/user-layer');
//user layer
// const {
//   UserController,
//   asyncWrap,
// } = require('/opt/nodejs/node_modules/user-layer');
//const UserController = require('/opt/nodejs/node_modules/user-layer/controller');
//const asyncWrap = require('/opt/nodejs/node_modules/user-layer/async-wrap');

// not using layer
//const UserController = require('./UserController');
//const { asyncWrap } = require('./async-wrap');

//// temp everything into index
// err //

const router = new Router();
//// router

router.get('/users', asyncWrap(listUsers));
router.post('/users/', asyncWrap(addUser));

router.put('/users/{userId}', asyncWrap(updateUserInfoById));
router.get('/users/{userId}', asyncWrap(getUserInfoById));

router.get('/users/{userId}/addresses', asyncWrap(getAddresses));
router.post('/users/{userId}/addresses', asyncWrap(addAddress));

router.get(
  '/users/{userId}/addresses/{addressId}',
  asyncWrap(getAddressesByUserId)
);
router.delete(
  '/users/{userId}/addresses/{addressId}',
  asyncWrap(deleteAddressById)
);
router.put(
  '/users/{userId}/addresses/{addressId}',
  asyncWrap(updateAddressById)
);

router.get('/users/{userId}/seller', asyncWrap(getSellerInfo));
router.get('/users/{userId}/buyer', asyncWrap(userController.getBuyerInfo));

// DATABASE CONNECTON : LOCAL
// createConnection(
//   databaseLocal.mysql.host,
//   databaseLocal.mysql.user,
//   databaseLocal.mysql.password,
//   databaseLocal.mysql.port,
//   databaseLocal.mysql.database
// );

// DATABASE CONNECTION : RDS
// createConnection(
//   process.env.RDS_HOSTNAME,
//   process.env.RDS_USERNAME,
//   process.env.RDS_PASSWORD,
//   process.env.RDS_PORT,
//   process.env.RDS_DB
// );

createConnectionPool(
  process.env.RDS_HOSTNAME,
  process.env.RDS_USERNAME,
  process.env.RDS_PASSWORD,
  process.env.RDS_PORT,
  process.env.RDS_DB
);

// handles routing and sends request
exports.handler = async function (event) {
  console.log('<TEST::: USER STACK >');
  console.log('::: event ::: ', event);
  return await router.route(event);
};

// handles routing and sends request
//exports.handler = asyncWrap(async function (event) {
//  return await router.route(event);
//});
